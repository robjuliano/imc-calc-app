{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","height","setHeight","weight","setWeight","bmi","setBMI","situation","setSIT","useEffect","bmi1","toFixed","console","log","id","className","action","type","onChange","e","h","target","value","placeholder","w","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAiFeA,MA7Ef,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACNC,EADM,KACEC,EADF,OAEeF,mBAAS,GAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGSJ,mBAAS,GAHlB,mBAGNK,EAHM,KAGDC,EAHC,OAIeN,mBAAS,GAJxB,mBAINO,EAJM,KAIKC,EAJL,KA6Cb,OA/BAC,qBAAU,WAER,IAAIC,EAAQP,GAAmB,EAATF,GAAe,IACrCK,EAAOI,EAAKC,QAAQ,IAChBD,EAAO,GACTF,EAAO,sBACPI,QAAQC,IAAI,2BAEHH,EAAO,MACdF,EAAO,WACPI,QAAQC,IAAI,YACHH,GAAQ,MAAQA,GAAQ,IACjCF,EAAO,UACPI,QAAQC,IAAI,WACHH,EAAO,IAAMA,EAAO,IAC7BF,EAAO,aACPI,QAAQC,IAAI,cACHH,EAAO,IAAMA,EAAO,IAC7BF,EAAO,aACPI,QAAQC,IAAI,eAEZL,EAAO,mBACPI,QAAQC,IAAI,sBAGb,CAACZ,EAAQE,IASZ,yBAASW,GAAG,QAAQC,UAAU,aAA9B,SACE,qBAAKD,GAAG,gBAAR,SACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,oEAAf,UACE,oBAAIA,UAAU,+BAAd,6BACA,qBAAKA,UAAU,OAAf,SACE,uBAAMC,OAAO,GAAGD,UAAU,yBAA1B,UAGE,qBAAKA,UAAU,aAAf,SACE,uBAAOE,KAAK,SAASC,SArDvC,SAAsBC,GACpB,IAAIC,EAAID,EAAEE,OAAOC,MACjBpB,EAAUkB,IAmDmDG,YAAY,aAE3D,sBAAKR,UAAU,aAAf,UACE,uBAAOE,KAAK,SAASC,SApDvC,SAAsBC,GACpB,IAAIK,EAAIL,EAAEE,OAAOC,MACjBlB,EAAUoB,IAkDmDD,YAAY,SACzD,+BAAI,uBAAJ,QAAmBlB,KACnB,6BAAKE,wBCxDVkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9436b948.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './css/Calc.css'\n\nfunction App() {\n  const [height, setHeight] = useState(1);\n  const [weight, setWeight] = useState(0);\n  const [bmi, setBMI] = useState(0);\n  const [situation, setSIT] = useState(1);\n\n  function handleHeight(e) {\n    let h = e.target.value;\n    setHeight(h);\n  }\n  function handleWeight(e) {\n    let w = e.target.value;\n    setWeight(w);\n  }\n  useEffect(() => {\n\n    let bmi1 = (weight / (height * 2)) * 100;\n    setBMI(bmi1.toFixed(2));\n    if (bmi1 < 1) {\n      setSIT(\"Preencha os dados.\")\n      console.log(\"Preencha Altura e Peso\")\n    }\n      else if (bmi1 < 18.5) {\n        setSIT(\"Magreza\")\n        console.log(\"Magreza\")\n      } else if (bmi1 >= 18.5 && bmi1 <= 25) {\n        setSIT(\"Normal\")\n        console.log(\"Normal\")\n      } else if (bmi1 > 25 && bmi1 < 30) {\n        setSIT(\"Sobrepeso\")\n        console.log(\"Sobrepeso\")\n      } else if (bmi1 > 30 && bmi1 < 40) {\n        setSIT(\"Obesidade\")\n        console.log(\"Obesidade\")\n      } else {\n        setSIT(\"Obesidade Grave\")\n        console.log(\"Obesidade Grave\")\n      }\n\n    }, [height, weight]);\n\n\n\n\n\n  return (\n\n\n    <section id=\"cover\" className=\"min-vh-100\" >\n      <div id=\"cover-caption\">\n        <div className=\"container\">\n          <div className=\"row text-white\">\n            <div className=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n              <h1 className=\"display-4 py-2 text-truncate\">Calculadora IMC</h1>\n              <div className=\"px-2\">\n                <form action=\"\" className=\"justify-content-center\">\n\n\n                  <div className=\"form-group\">\n                    <input type=\"number\" onChange={handleHeight} placeholder=\"Altura\"></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"number\" onChange={handleWeight} placeholder=\"Peso\"></input>\n                    <h2><br></br>IMC :{bmi}</h2>\n                    <h3>{situation}</h3>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}